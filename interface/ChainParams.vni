package mmx;

class ChainParams {
	
	double block_time = 10;					// [sec]
	
	uint tcp_port;
	uint decimals = 6;
	uint plot_filter = 10;
	uint finality_delay = 6;				// number of blocks until history is fixed (must be >= challenge_delay)
	uint challenge_delay = 4;				// blocks until new challange is active (must be > 0)
	uint challenge_interval = 64;			// challenge is for next N blocks
	uint max_diff_adjust = 10;				// per block (1/2^x)
	uint num_vdf_segments = 184;
	
	uint score_bits = 10;
	uint score_threshold = 1000;			// should be <= 2^score_bits
	uint target_score = 125;				// defines how many competing blocks are created (must be less than score_threshold)
	
	uint min_ksize = 30;
	uint max_ksize = 42;
	
	uint max_tx_inputs = 1048576;
	uint max_tx_outputs = 1048576;
	ulong max_block_cost = 1000000000;
	
	ulong min_reward = 200000;
	ulong_fraction_t reward_factor;			// reward = (diff * value) / inverse;
	
	ulong time_diff_constant = 10000;
	ulong space_diff_constant = 139586437120;
	
	ulong initial_time_diff = 10000;		// [iters/sec]
	ulong initial_space_diff = 256;			// quality modulo
	
	ulong min_txfee_exec = 100000;			// per operation
	ulong min_txfee_inout = 500;			// per input / output
	
	string vdf_seed;
	
}
