package mmx;

class BlockHeader {
	
	uint version;
	
	hash_t hash;
	hash_t prev;
	
	uint height;
	ulong nonce;
	long time_stamp;					// UNIX [ms]
	
	ulong time_diff;
	ulong space_diff;
	
	uint128 weight;
	uint128 total_weight;
	
	uint netspace_ratio;
	ulong txfee_buffer;
	
	ulong vdf_iters;
	hash_t vdf_output[2];
	optional<addr_t> vdf_reward_addr;
	
	ProofOfSpace* proof;
	
	ulong reward_amount;
	optional<addr_t> reward_addr;
	// TODO: optional<addr_t> reward_contract;		// plot NFT address
	// TODO: optional<addr_t> reward_account;		// farmer account
	
	char reward_vote;					// 0 = unchanged, 1 = up, -1 = down
	ulong next_base_reward;
	
	ulong static_cost;
	ulong total_cost;
	
	uint tx_count;
	ulong tx_fees;
	
	hash_t tx_hash;
	
	optional<signature_t> farmer_sig;
	
	hash_t content_hash;
	
	
	bool is_valid() const;
	
	pair<hash_t, hash_t> calc_hash() const;
	
	void validate() const;
	
	BlockHeader* get_header() const;
	
	block_index_t get_block_index(long file_offset) const;
	
}
