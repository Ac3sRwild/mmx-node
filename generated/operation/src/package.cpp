
// AUTO GENERATED by vnxcppcodegen

#include <mmx/operation/Deposit.hxx>
#include <mmx/operation/Execute.hxx>

#include <mmx/operation/package.hxx>
#include <vnx/vnx.h>



namespace vnx {

const TypeCode* type<::mmx::operation::Deposit>::get_type_code() {
	return mmx::operation::vnx_native_type_code_Deposit;
}

void type<::mmx::operation::Deposit>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::mmx::operation::Deposit());
}

void type<::mmx::operation::Deposit>::create_dynamic_code(std::vector<uint16_t>& code, const ::mmx::operation::Deposit& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::mmx::operation::Execute>::get_type_code() {
	return mmx::operation::vnx_native_type_code_Execute;
}

void type<::mmx::operation::Execute>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::mmx::operation::Execute());
}

void type<::mmx::operation::Execute>::create_dynamic_code(std::vector<uint16_t>& code, const ::mmx::operation::Execute& value, bool special) {
	code.push_back(CODE_OBJECT);
}


} // namespace vnx


namespace mmx {
namespace operation {


void register_all_types() {
	vnx::register_type_code(::mmx::operation::Deposit::static_create_type_code());
	vnx::register_type_code(::mmx::operation::Execute::static_create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

const vnx::TypeCode* const vnx_native_type_code_Deposit = vnx::get_type_code(vnx::Hash64(0xc23408cb7b04b0ecull));
const vnx::TypeCode* const vnx_native_type_code_Execute = vnx::get_type_code(vnx::Hash64(0x8cd9012d9098c1d1ull));

} // namespace mmx
} // namespace operation
