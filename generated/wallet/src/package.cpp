
// AUTO GENERATED by vnxcppcodegen

#include <mmx/wallet/tx_entry_t.hxx>
#include <mmx/wallet/tx_type_e.hxx>

#include <mmx/wallet/package.hxx>
#include <vnx/vnx.h>



namespace vnx {

void type<::mmx::wallet::tx_entry_t>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::mmx::wallet::tx_entry_t());
}

void type<::mmx::wallet::tx_entry_t>::create_dynamic_code(std::vector<uint16_t>& code, const ::mmx::wallet::tx_entry_t& value, bool special) {
	code.push_back(CODE_OBJECT);
}

void type<::mmx::wallet::tx_type_e>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::mmx::wallet::tx_type_e());
}

void type<::mmx::wallet::tx_type_e>::create_dynamic_code(std::vector<uint16_t>& code, const ::mmx::wallet::tx_type_e& value, bool special) {
	if(!special || value.is_valid()) {
		code.push_back(CODE_STRING);
	} else {
		code.push_back(CODE_UINT32);
	}
}


} // namespace vnx


namespace mmx {
namespace wallet {


static void register_all_types() {
	vnx::register_type_code(::mmx::wallet::tx_entry_t::static_create_type_code());
	vnx::register_type_code(::mmx::wallet::tx_type_e::static_create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

const vnx::TypeCode* const vnx_native_type_code_tx_entry_t = vnx::get_type_code(vnx::Hash64(0xd2325bd15e4a174full));
const vnx::TypeCode* const vnx_native_type_code_tx_type_e = vnx::get_type_code(vnx::Hash64(0x253be3534b9b9756ull));

} // namespace mmx
} // namespace wallet
